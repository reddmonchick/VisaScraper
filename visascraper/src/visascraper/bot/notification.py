from aiogram import Bot
from datetime import date, timedelta
import os
from visascraper.database.db import SessionLocal
from visascraper.database.models import BatchApplication, StayPermit

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ===
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")
bot = Bot(token=BOT_TOKEN)


# === –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è ===
async def send_telegram_message(text: str):
    try:
        await bot.send_message(chat_id=CHANNEL_ID, text=text)
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


# === 1. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ "Approved" ===
async def notify_approved_users():
    db = SessionLocal()
    print('–ó–∞–ø—É—Å—Ç–∏–ª–∏ –∫—Ä–æ–Ω: notify_approved_users')
    try:
        users = db.query(BatchApplication).all()
        for user in users:
            if user.status == "Approved" and user.last_status != "Approved" and user.last_status != None:
                text = (
                    f"üéâ –í–∏–∑–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!\n"
                    f"–ò–º—è: {user.full_name}\n"
                    f"–°—Ç–∞—Ç—É—Å: {user.status}\n"
                    f"–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞: {user.passport_number}\n"
                    f"–°—Å—ã–ª–∫–∞: {user.action_link}"
                )
                await send_telegram_message(text)
                user.last_status = "Approved"
                db.commit()
            elif user.status != "Approved" and user.last_status == "Approved":
                user.last_status = user.status
                db.commit()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()


# === 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è ===
async def check_birthdays():
    db = SessionLocal()
    today = date.today()
    print('–ó–∞–ø—É—Å—Ç–∏–ª–∏ –∫—Ä–æ–Ω: check_birthdays')
    try:
        users = db.query(BatchApplication).filter(
            BatchApplication.birth_date.is_not(None),
            BatchApplication.birth_date.like(f"{today.strftime('%d/%m')}/%")
        ).all()

        for user in users:
            text = (
                f"üéÇ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {user.full_name}!\n"
                f"–¢–∏–ø –≤–∏–∑—ã: {user.visa_type}\n"
                f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {user.birth_date}"
            )
            await send_telegram_message(text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è: {e}")
    finally:
        db.close()


# === 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –≤–∏–∑—ã ===
async def check_visa_expirations():
    db = SessionLocal()
    today = date.today()
    threshold = today + timedelta(days=30)  # –ó–∞ 30 –¥–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
    print('–ó–∞–ø—É—Å—Ç–∏–ª–∏ –∫—Ä–æ–Ω: check_visa_expirations')
    try:
        users = db.query(StayPermit).filter(
            StayPermit.expired_date.is_not(None),
            StayPermit.expired_date == threshold.strftime("%d/%m/%Y")
        ).all()

        for user in users:
            text = (
                f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name} –≤–∏–∑–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π!\n"
                f"–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {user.expired_date}\n"
                f"–¢–∏–ø –≤–∏–∑—ã: {user.type_of_staypermit}"
            )
            await send_telegram_message(text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤–∏–∑—ã: {e}")
    finally:
        db.close()